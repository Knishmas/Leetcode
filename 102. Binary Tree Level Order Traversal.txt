//Time Complexity: O(n)
//Space Complexity: O(n)
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> levelList = new ArrayList<>(); 
        //base case
        if(root == null) return levelList;
        Queue<TreeNode> levelQueue = new LinkedList<>(); 
        //adding root to initiate while loop
        levelQueue.add(root); 

        while(!levelQueue.isEmpty()){
            List<Integer> currentLevel = new ArrayList<>(); 
            int levelSize = levelQueue.size(); 
            //for every node in each level add their children to the queue
            for(int i = 0; i < levelSize; i++){
                TreeNode current = levelQueue.poll(); 
                currentLevel.add(current.val);
                if(current.left != null){
                    levelQueue.add(current.left);
                } 
                if(current.right != null){
                    levelQueue.add(current.right);
                }
            }
            //level is finished, add that level list to our final answer
            levelList.add(currentLevel);
        }
        return levelList; 
    }
}