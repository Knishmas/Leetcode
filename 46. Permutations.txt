class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> permutations = new ArrayList<>();
        backtrack(nums, permutations, new ArrayList<>());
        return permutations;
    }
    public void backtrack(int[] nums,  List<List<Integer>> permutations, List<Integer> currList){
        if(currList.size() == nums.length) permutations.add(new ArrayList<>(currList)); 

        for(int i = 0; i < nums.length; i++){
            if(currList.contains(nums[i])) continue;
            currList.add(nums[i]);
            backtrack(nums, permutations, currList);
            currList.remove(currList.size() - 1);
        }
    }
}