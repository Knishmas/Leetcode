class Solution {
    //Time Complexity: O(n + m), n being nodes list 1 & m being nodes in list2
    //Space complexity: O(1)
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        //Making a dummy node to return head; 
        ListNode mergedList = new ListNode(0);
        ListNode current = mergedList; 
        //Re-assign node pointers according to value comparisons
        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                current.next = list1;
                list1 = list1.next;
            } else{
                current.next = list2; 
                list2 = list2.next; 
            }
            current = current.next; 
        }
        //In the case where one of the list still continues, we add the rest of it. 
        if(list1 != null) current.next = list1; 
        if(list2 != null) current.next = list2; 

        return mergedList.next; 
    }
}