
class Solution {
    public boolean isValidBST(TreeNode root) {
        return validateTree(root, Long.MIN_VALUE, Long.MAX_VALUE); 
    }
    public boolean validateTree(TreeNode root, long min, long max){
        //base case, we've reached a leaf node without invalidating the tree
        if(root == null) return true; 
        //validating that the current node doesn't violate BST boundary rules
        if(root.val >= max || root.val <= min) return false; 
        //check that both left and right subtrees also follow the rules of a BST, if so: it's a BST
        return validateTree(root.left,min,root.val) && validateTree(root.right,root.val,max); 
    }
}