//Top down DP utilizing array. 
class Solution {
    //Cache values
    private int[] cache = new int[46];
    public int climbStairs(int n) {
        //base cases
        if (n == 0 || n == 1) return 1; 
        //if in cache already
        else if(cache[n] != 0){
            return cache[n];
        } else{
            // if it hasn't been cached
            return cache[n] = climbStairs(n-1) + climbStairs(n-2);
        }   
    }
}