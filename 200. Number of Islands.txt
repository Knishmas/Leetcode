class Solution {
    public int numIslands(char[][] grid) {
        
        int islands = 0;
        
        for(int i = 0; i < grid.length; i++){
            for(int j = 0; j < grid[i].length;j++){
                if(grid[i][j] == '1'){
                    islands++;
                    BFS(grid, i, j);
                }
            }
        }
        
        return islands; 
    }
    
    
    public void BFS(char[][] matrix, int i, int j){
        //check bounds
        if(i < 0 || i >= matrix.length || j < 0 || j >= matrix[i].length || matrix[i][j] == '0') return;
        //change value of 1 that's been traversed to, to 0 so we don't check again. 
        matrix[i][j] = '0'; 
        
        BFS(matrix, i - 1, j); //up
        BFS(matrix, i + 1, j); //down
        BFS(matrix, i, j - 1); //left
        BFS(matrix, i, j + 1); //right
        
    }
}

